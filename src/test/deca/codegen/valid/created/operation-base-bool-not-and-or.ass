; start main program
; Main program
	LOAD #0, R2
	STORE R2, 3(GB)
	LOAD #1, R2
	STORE R2, 4(GB)
	LOAD #1, R2
	STORE R2, 5(GB)
	LOAD #0, R2
	STORE R2, 6(GB)
	STORE R2, 7(GB)
; Beginning of main instructions:
	LOAD 3(GB), R0
	CMP #0, R0
	BNE finAnd0
	LOAD 4(GB), R0
	CMP #0, R0
	BEQ trueVar0
finAnd0:
	LOAD 5(GB), R0
	CMP #0, R0
	BEQ finAnd1
	LOAD 6(GB), R0
	CMP #0, R0
	BNE trueVar0
finAnd1:
	BRA falseVar0
trueVar0:
	LOAD #1, R2
	BRA nextVar0
falseVar0:
	LOAD #0, R2
nextVar0:
	STORE R2, 7(GB)
beginIf0:
	LOAD 7(GB), R0
	CMP #0, R0
	BNE ifInst0
	BRA elseInst0
ifInst0:
	WSTR "true"
	WNL
	BRA finElse0
elseInst0:
	WSTR "false"
	WNL
finElse0:
	LOAD 3(GB), R0
	CMP #0, R0
	BEQ trueVar1
	LOAD 4(GB), R0
	CMP #0, R0
	BEQ finAnd2
	LOAD 5(GB), R0
	CMP #0, R0
	BNE trueVar1
finAnd2:
	LOAD 6(GB), R0
	CMP #0, R0
	BNE trueVar1
	BRA falseVar1
trueVar1:
	LOAD #1, R2
	BRA nextVar1
falseVar1:
	LOAD #0, R2
nextVar1:
	STORE R2, 7(GB)
beginIf1:
	LOAD 7(GB), R0
	CMP #0, R0
	BNE ifInst1
	BRA elseInst1
ifInst1:
	WSTR "true"
	WNL
	BRA finElse1
elseInst1:
	WSTR "false"
	WNL
finElse1:
	LOAD 3(GB), R0
	CMP #0, R0
	BEQ finAnd4
	LOAD 4(GB), R0
	CMP #0, R0
	BEQ finAnd3
finAnd4:
	LOAD 5(GB), R0
	CMP #0, R0
	BNE trueVar2
	LOAD 6(GB), R0
	CMP #0, R0
	BNE trueVar2
finAnd3:
	BRA falseVar2
trueVar2:
	LOAD #1, R2
	BRA nextVar2
falseVar2:
	LOAD #0, R2
nextVar2:
	STORE R2, 7(GB)
beginIf2:
	LOAD 7(GB), R0
	CMP #0, R0
	BNE ifInst2
	BRA elseInst2
ifInst2:
	WSTR "true"
	WNL
	BRA finElse2
elseInst2:
	WSTR "false"
	WNL
finElse2:
	LOAD 7(GB), R0
	CMP #0, R0
	BEQ finAnd5
	LOAD 3(GB), R0
	CMP #0, R0
	BNE trueVar3
	LOAD 4(GB), R0
	CMP #0, R0
	BEQ trueVar3
	LOAD 5(GB), R0
	CMP #0, R0
	BEQ trueVar3
	LOAD 6(GB), R0
	CMP #0, R0
	BEQ trueVar3
finAnd5:
	BRA falseVar3
trueVar3:
	LOAD #1, R2
	BRA nextVar3
falseVar3:
	LOAD #0, R2
nextVar3:
	STORE R2, 7(GB)
beginIf3:
	LOAD 7(GB), R0
	CMP #0, R0
	BNE ifInst3
	BRA elseInst3
ifInst3:
	WSTR "true"
	WNL
	BRA finElse3
elseInst3:
	WSTR "false"
	WNL
finElse3:
	LOAD 7(GB), R0
	CMP #0, R0
	BEQ finAnd7
	LOAD 7(GB), R0
	CMP #0, R0
	BEQ finAnd6
finAnd7:
	LOAD 7(GB), R0
	CMP #0, R0
	BNE finAnd6
	LOAD 7(GB), R0
	CMP #0, R0
	BNE trueVar4
finAnd6:
	BRA falseVar4
trueVar4:
	LOAD #1, R2
	BRA nextVar4
falseVar4:
	LOAD #0, R2
nextVar4:
	STORE R2, 7(GB)
beginIf4:
	LOAD 7(GB), R0
	CMP #0, R0
	BNE ifInst4
	BRA elseInst4
ifInst4:
	WSTR "true"
	WNL
	BRA finElse4
elseInst4:
	WSTR "false"
	WNL
finElse4:
	LOAD 7(GB), R0
	CMP #0, R0
	BNE finAnd8
	LOAD 7(GB), R0
	CMP #0, R0
	BNE trueVar5
	LOAD 7(GB), R0
	CMP #0, R0
	BNE trueVar5
	LOAD 7(GB), R0
	CMP #0, R0
	BEQ trueVar5
finAnd8:
	BRA falseVar5
trueVar5:
	LOAD #1, R2
	BRA nextVar5
falseVar5:
	LOAD #0, R2
nextVar5:
	STORE R2, 7(GB)
beginIf5:
	LOAD 7(GB), R0
	CMP #0, R0
	BNE ifInst5
	BRA elseInst5
ifInst5:
	WSTR "true"
	WNL
	BRA finElse5
elseInst5:
	WSTR "false"
	WNL
finElse5:
	LOAD 3(GB), R0
	CMP #0, R0
	BEQ finAnd9
	LOAD 5(GB), R0
	CMP #0, R0
	BNE trueVar6
finAnd9:
	LOAD 3(GB), R0
	CMP #0, R0
	BNE finAnd10
	LOAD 5(GB), R0
	CMP #0, R0
	BEQ trueVar6
finAnd10:
	BRA falseVar6
trueVar6:
	LOAD #1, R2
	BRA nextVar6
falseVar6:
	LOAD #0, R2
nextVar6:
	STORE R2, 7(GB)
beginIf6:
	LOAD 7(GB), R0
	CMP #0, R0
	BNE ifInst6
	BRA elseInst6
ifInst6:
	WSTR "true"
	WNL
	BRA finElse6
elseInst6:
	WSTR "false"
	WNL
finElse6:
	HALT
pile_pleine:
	WSTR "Error: pile pleine"
	WNL
	ERROR
Overflow_error:
	WSTR "Error: Overflow during arithmetic operation"
	WNL
	ERROR
division_zero:
	WSTR "Error: Division by zero"
	WNL
	ERROR
io_error:
	WSTR "Error: Input/Output error"
	WNL
	ERROR
; end main program
