class A {
int x ;int y ;
}

class B extends A {
int a ;
}

class C extends B {

}

{
	C c ;
	(c = new C());
	if () {
println("ok");
	}
else{
}

}
class A {
protected int x ;protected boolean b ;
void affiche(){
println("hello");
}
}

{
	A obj  = new A();
	obj.affiche();
}
class A {
protected int x ;protected boolean b ;
int get(){
return 12 ;
}
}

{
	A obj  = new A();
	int x  = obj.get();
}
class A {
protected int x ;protected boolean b ;
void setX(intx){
(this.x = x);
}
int getX(){
return this.x ;
}
}

{
	A obj  = new A();
	obj.setX(-12);
	print(obj.getX());
}
class A {
int x ;protected boolean b ;
void setX(intval){
(this.x = val);
}
int getX(){
return this.x ;
}
}

{
	A obj  = new A();
	(obj.x = 12);
	print(obj.getX());
}
class A {
protected int x ;protected boolean b ;
void setX(intval){
(this.x = val);
}
int getX(){
return this.x ;
}
}

{
	A obj  = new A();
	print(obj.getX());
}
class A {
protected int x  = 21;int y  = x;protected boolean b ;
void setX(intval){
(this.x = val);
}
int getX(){
return this.x ;
}
int getY(){
return this.y ;
}
}

{
	A obj  = new A();
	print(obj.getY());
}
class A {

}

class B extends A {

}

class A {

}

{
}
class A {

}

class B extends A {

}

class C extends B {

}

class D extends B {

}

class E extends A {

}

class A {
int x ;int y ;
}

class B extends A {

}

{
	B obj  = new B();
	(B.x = 14);
}
class A {
int x ;int y ;
void setX(intx){
(this.x = x);
}
}

class B extends A {

}

{
	B obj  = new B();
	B.setX(14);
	print(B.x);
}
class A {
protected int x  = 21;
int getX(){
return x ;
}
}

{
	A obj  = new A();
	print(obj.getX());
}
class A {
protected int x ;
void setX(intx){
(this.x = x);
}
int getX(){
return x ;
}
void init(){
(x = 0);
}
}

class B extends A {
int y ;
void init(){
this.setX(0);
(y = 0);
}
}

class C extends A {
int z ;
void init(){
this.setX(0);
(z = 1);
}
}

class A {

}

class P {
int x ;int y ;
void move(intaintb){
(x = (x + a));
(y = (y + b));
}
}

class C {
int x ;int y  = 1;
int getX(){
return x ;
}
void incrX(){
(x = (x + 1));
}
}

{
	C obj  = new C();
	obj.incrX();
	obj.incrX();
	obj.incrX();
	obj.incrX();
	print(obj.x);
}
class A {

void m(){
}
void p(){
}
}

class B extends A {

void p(){
}
void q(){
}
}

class Q {

float abs(floatx){
if ((x < 0x0.0p0)) {
return -x ;
}
else{
}

}
}

{
	Q obj  = new Q();
	int x  = Q.abs(-8);
	print(x);
}
class A {

}

{
	A obj ;
}
class Compteur {
int x ;
void incr(){
(x = (x + 1));
}
}

{
	Compteur c  = new Compteur();
	c.incr();
	print(c.x);
}
class A {

void f(){
A A  = new A();
A.f();
}
}

class A {
B b ;
}

class B {
A a ;
}

class Parcours {

void parcoursA(Aa){
if ((a != )) {
this.parcoursB(a.b);
}
else{
}

}
void parcoursB(Bb){
if ((b != )) {
this.parcoursA(b.a);
}
else{
}

}
}

class A {
int x ;int y ;int z ;
}

class B extends A {
int x ;
}

class Point2D {
int x ;int y ;
void diag(inta){
(x = (x + a));
(y = (y + a));
}
}

class Point3D extends Point2D {
int z ;
void diag(inta){
(x = (x + a));
(y = (y + a));
(z = (z + a));
}
}

{
	Point2D p1 ;
	Point2D p2 ;
	Point3D p3 ;
	(p1 = new Point2D());
	p1.diag(1);
	(p3 = new Point3D());
	p3.diag(2);
	(p2 = p3);
	p2.diag(3);
	println(p3.x);
}
class A {

}

{
	A obj ;
	A b ;
	A a ;
	A p ;
}
class A {

}

{
	A obj  = new A();
}
class A {
int x ;
}

{
}
class A {
protected int x ;protected boolean b ;
}

{
}
class A {
int x ;boolean b ;
}

{
}
class A {
int x ;protected boolean b ;boolean d ;protected int f ;
}

{
}
class C {
int x ;int y  = 1;
int getX(){
return x ;
}
void incrX(){
(x = (x + 1));
}
}

