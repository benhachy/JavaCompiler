; start main program
	ADDSP #9
; Main program
; code pour l'initializaton de la table des methodes
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Code de la table des méthodes de A
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.get, R0
	STORE R0, 5(GB)
; idk why or how he's here
	NEW #4, R2
	BOV pile_pleine
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 6(GB)
; idk why or how he's here
	LOAD #5, R2
	STORE R2, 7(GB)
; idk why or how he's here
; appel à la méthode get
	ADDSP #1
; je suis dans codeGenExpr dans indentifier.java
	LOAD 6(GB), R3
	STORE R3, 0(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ deferencement.null
	LOAD 0(R3), R3
	BSR code.A.get
	SUBSP #1
	PUSH R2
	LOAD R0, R2
	STORE R2, 8(GB)
	POP R2
; Beginning of main instructions:
	ADDSP #10
	LOAD 8(GB), R1
	WINT
	WNL
	HALT
; Initialisation des champs de A
init.A:
	TSTO #4
	BOV pile_pleine
	LOAD -2(LB), R1
	LOAD #10, R0
	STORE R0, 1(R1)
	LOAD #0, R0
	STORE R0, 2(R1)
	LOAD #0, R0
	STORE R0, 3(R1)
	RTS
code.A.get:
	TSTO #2	; test de debordement de la pile
	BOV pile_pleine
	PUSH R2
	PUSH R3
; ana jit les méthodes 
	LOAD -2(LB), R2
	LOAD -2(LB), R3
	LOAD #12, R0
	BRA fin.A.get
fin.A.get:
; Restauration des registres
	POP R3
	POP R2
	RTS
code.Object.equals:
	PUSH R2
	PUSH R3
	LOAD -2(LB), R2
	LOAD -3(LB), R3
	CMP R3, R2
	BEQ code.Object.equals.loadTrueEQ
	LOAD #0, R0
	BRA code.Object.equals.finComparationEQ
code.Object.equals.loadTrueEQ:
	LOAD #1, R0
code.Object.equals.finComparationEQ:
	POP R3
	POP R2
	RTS
pile_pleine:
	WSTR "Error: pile pleine"
	WNL
	ERROR
Overflow_error:
	WSTR "Error: Overflow during arithmetic operation"
	WNL
	ERROR
division_zero:
	WSTR "Error: Division by zero"
	WNL
	ERROR
io_error:
	WSTR "Error: Input/Output error"
	WNL
	ERROR
print_Error:
	WSTR "Error: print float only in hexa form"
	WNL
	ERROR
deferencement.null:
	WSTR "Erreur : dereferencement de null"
	WNL
	ERROR
; end main program
